<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>me.bechberger</groupId>
    <artifactId>trace-tester</artifactId>
    <version>1.0</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <id>generate-jni-headers</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <executable>javac</executable>
                            <arguments>
                                <argument>--source-path</argument>
                                <argument>${project.build.sourceDirectory}</argument>
                                <argument>${project.build.sourceDirectory}/tester/Tracer.java</argument>
                                <argument>-d</argument>
                                <argument>${project.build.directory}/classes</argument>
                                <argument>-h</argument>
                                <argument>${project.basedir}/src/native/include</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- based on https://github.com/dredwardhyde/jni-maven-example/blob/master/pom.xml -->
            <id>macOS</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <os_name>mac</os_name>
                <lib_name>libjni.dylib</lib_name>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <version>1.0-alpha-11</version>
                        <extensions>true</extensions>
                        <configuration>
                            <javahOS>${os_name}</javahOS>
                            <sources>
                                <source>
                                    <directory>src/native/source</directory>
                                    <fileNames>
                                        <fileName>jni.cpp</fileName>
                                    </fileNames>
                                </source>
                                <source>
                                    <directory>src/native/include</directory>
                                </source>
                            </sources>
                            <compilerProvider>generic-classic</compilerProvider>
                            <compilerExecutable>g++</compilerExecutable>
                            <compilerStartOptions>
                                <compilerStartOption>-O3</compilerStartOption>
                                <compilerStartOption>-I</compilerStartOption>
                                <compilerStartOption>${env.JAVA_HOME}/include</compilerStartOption>
                                <compilerStartOption>-I</compilerStartOption>
                                <compilerStartOption>${env.JAVA_HOME}/include/darwin</compilerStartOption>
                                <compilerStartOption>-std=c++14</compilerStartOption>
                                <compilerStartOption>-fPIC</compilerStartOption>
                            </compilerStartOptions>
                            <linkerOutputDirectory>target</linkerOutputDirectory>
                            <linkerExecutable>g++</linkerExecutable>
                            <linkerStartOptions>
                                <linkerStartOption>-shared</linkerStartOption>
                                <linkerStartOption>-ldl</linkerStartOption>
                                <linkerStartOption>-L</linkerStartOption>
                                <linkerStartOption>${env.JAVA_HOME}/lib/server</linkerStartOption>
                                <linkerStartOption>-ljvm</linkerStartOption>
                            </linkerStartOptions>
                            <linkerEndOptions>
                                <linkerEndOption>-o ${project.basedir}/src/main/resources/${lib_name}</linkerEndOption>
                            </linkerEndOptions>
                        </configuration>
                        <executions>
                            <execution>
                                <id>javah</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>initialize</goal>
                                    <goal>compile</goal>
                                    <goal>link</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>linux</family>
                </os>
            </activation>
            <properties>
                <os_name>linux</os_name>
                <lib_name>libjni.so</lib_name>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <version>1.0-alpha-11</version>
                        <extensions>true</extensions>
                        <configuration>
                            <javahOS>${os_name}</javahOS>
                            <sources>
                                <source>
                                    <directory>src/native/source</directory>
                                    <fileNames>
                                        <fileName>jni.cpp</fileName>
                                    </fileNames>
                                </source>
                                <source>
                                    <directory>src/native/include</directory>
                                </source>
                            </sources>
                            <compilerProvider>generic-classic</compilerProvider>
                            <compilerExecutable>g++</compilerExecutable>
                            <compilerStartOptions>
                                <compilerStartOption>-O3</compilerStartOption>
                                <compilerStartOption>-I</compilerStartOption>
                                <compilerStartOption>${env.JAVA_HOME}/include</compilerStartOption>
                                <compilerStartOption>-I</compilerStartOption>
                                <compilerStartOption>${env.JAVA_HOME}/include/linux</compilerStartOption>
                                <compilerStartOption>-fPIC</compilerStartOption>
                            </compilerStartOptions>
                            <linkerOutputDirectory>target</linkerOutputDirectory>
                            <linkerExecutable>g++</linkerExecutable>
                            <linkerStartOptions>
                                <linkerStartOption>-m64</linkerStartOption>
                                <linkerStartOption>-shared</linkerStartOption>
                            </linkerStartOptions>
                            <linkerEndOptions>
                                <linkerEndOption>-o ${project.build.directory}/classes/${lib_name}</linkerEndOption>
                            </linkerEndOptions>
                        </configuration>
                        <executions>
                            <execution>
                                <id>javah</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>initialize</goal>
                                    <goal>compile</goal>
                                    <goal>link</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.3.0</version>
        </dependency>
        <dependency>
            <groupId>me.bechberger</groupId>
            <artifactId>ap-loader-all</artifactId>
            <version>2.9-5</version>
        </dependency>
    </dependencies>
</project>